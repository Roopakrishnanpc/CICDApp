spring.application.name=CICDApp
spring.datasource.url=jdbc:mysql://google/SpringFramework?socketFactory=com.google.cloud.sql.mysql.SocketFactory&cloudSqlInstance=genial-runway-433710-p1:us-central1:my-sql-instance
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

  # Include if a password is set
#sonar.exclusions=target/**
#sonar.java.binaries=target/classes
sonar.java.binaries=.
sonar.exclusions=target/**
#sonar.exclusions=**/*.java
spring.cloud.gcp.sql.database-name=SpringFramework
spring.cloud.gcp.sql.instance-connection-name=genial-runway-433710-p1:us-central1:my-sql-instance

spring.profiles.active=mysql

# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.5+.
spring.sql.init.mode=always  
# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
logging.level.org.springframework.boot.actuate=DEBUG
# application.properties
server.error.whitelabel.enabled=false
# Custom error page location
server.error.path=/error
#spring.main.web-application-type=none
management.endpoints.web.base-path=/manage
info.application.name=spring boot example
info.application.description= spring boot 3.x enchancement
info.application.artifact=springboot-acutator
info.tech.java=open jdk
info.tech.springboot=3version
management.server.port=8090
#dummyservice.port=8081
#dummyservice.address: 127.0.0.1
management.endpoints.web.exposure.include=*
#you can also create your health as dyanamic
#management.endpoints.web.exposure.include=health,info,beans,env,user-management,custom
#below is like you can customize info after info. you can give anything ans customizze, you can also do same with dynamic info using InfoBuilder

# Show SQL statements in the console
spring.jpa.show-sql=true

# Format SQL statements for better readability
spring.jpa.properties.hibernate.format_sql=true

# Enable or disable SQL logging
spring.jpa.properties.hibernate.use_sql_comments=true

spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp
server.port=8086
logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG
